name: Build Release

on:
  push:
    tags:
      - v*
  workflow_dispatch:

permissions: write-all

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Cargo
        uses: actions/cache@v2
        with:
          path: ~/.cargo
          key: ${{ matrix.os }}-cargo

      - name: Build
        run: cargo build --release

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: cli-${{ matrix.os }}
          path: target/release/${{ matrix.os == 'windows-latest' && 'lecturecut.exe' || 'lecturecut' }}

  release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v3

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ./cli-windows-latest/lecturecut.exe
            ./cli-ubuntu-latest/lecturecut
          draft: false
          prerelease: false